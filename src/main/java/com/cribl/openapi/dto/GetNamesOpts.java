/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import com.cribl.openapi.dto.Expression;
import com.cribl.openapi.dto.Filter;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * GetNamesOpts
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-08T00:23:34.796-04:00[America/New_York]")
public class GetNamesOpts {
  @SerializedName("dimKeyFilter")
  private Filter dimKeyFilter = null;

  @SerializedName("dimValueFilter")
  private Filter dimValueFilter = null;

  @SerializedName("earliest")
  private BigDecimal earliest = null;

  @SerializedName("filterExpr")
  private Expression filterExpr = null;

  @SerializedName("maxValues")
  private BigDecimal maxValues = null;

  @SerializedName("metricNameFilter")
  private Filter metricNameFilter = null;

  public GetNamesOpts dimKeyFilter(Filter dimKeyFilter) {
    this.dimKeyFilter = dimKeyFilter;
    return this;
  }

   /**
   * Get dimKeyFilter
   * @return dimKeyFilter
  **/
  @Schema(description = "")
  public Filter getDimKeyFilter() {
    return dimKeyFilter;
  }

  public void setDimKeyFilter(Filter dimKeyFilter) {
    this.dimKeyFilter = dimKeyFilter;
  }

  public GetNamesOpts dimValueFilter(Filter dimValueFilter) {
    this.dimValueFilter = dimValueFilter;
    return this;
  }

   /**
   * Get dimValueFilter
   * @return dimValueFilter
  **/
  @Schema(description = "")
  public Filter getDimValueFilter() {
    return dimValueFilter;
  }

  public void setDimValueFilter(Filter dimValueFilter) {
    this.dimValueFilter = dimValueFilter;
  }

  public GetNamesOpts earliest(BigDecimal earliest) {
    this.earliest = earliest;
    return this;
  }

   /**
   * Get earliest
   * @return earliest
  **/
  @Schema(description = "")
  public BigDecimal getEarliest() {
    return earliest;
  }

  public void setEarliest(BigDecimal earliest) {
    this.earliest = earliest;
  }

  public GetNamesOpts filterExpr(Expression filterExpr) {
    this.filterExpr = filterExpr;
    return this;
  }

   /**
   * Get filterExpr
   * @return filterExpr
  **/
  @Schema(description = "")
  public Expression getFilterExpr() {
    return filterExpr;
  }

  public void setFilterExpr(Expression filterExpr) {
    this.filterExpr = filterExpr;
  }

  public GetNamesOpts maxValues(BigDecimal maxValues) {
    this.maxValues = maxValues;
    return this;
  }

   /**
   * Get maxValues
   * @return maxValues
  **/
  @Schema(description = "")
  public BigDecimal getMaxValues() {
    return maxValues;
  }

  public void setMaxValues(BigDecimal maxValues) {
    this.maxValues = maxValues;
  }

  public GetNamesOpts metricNameFilter(Filter metricNameFilter) {
    this.metricNameFilter = metricNameFilter;
    return this;
  }

   /**
   * Get metricNameFilter
   * @return metricNameFilter
  **/
  @Schema(description = "")
  public Filter getMetricNameFilter() {
    return metricNameFilter;
  }

  public void setMetricNameFilter(Filter metricNameFilter) {
    this.metricNameFilter = metricNameFilter;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetNamesOpts getNamesOpts = (GetNamesOpts) o;
    return Objects.equals(this.dimKeyFilter, getNamesOpts.dimKeyFilter) &&
        Objects.equals(this.dimValueFilter, getNamesOpts.dimValueFilter) &&
        Objects.equals(this.earliest, getNamesOpts.earliest) &&
        Objects.equals(this.filterExpr, getNamesOpts.filterExpr) &&
        Objects.equals(this.maxValues, getNamesOpts.maxValues) &&
        Objects.equals(this.metricNameFilter, getNamesOpts.metricNameFilter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dimKeyFilter, dimValueFilter, earliest, filterExpr, maxValues, metricNameFilter);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetNamesOpts {\n");
    
    sb.append("    dimKeyFilter: ").append(toIndentedString(dimKeyFilter)).append("\n");
    sb.append("    dimValueFilter: ").append(toIndentedString(dimValueFilter)).append("\n");
    sb.append("    earliest: ").append(toIndentedString(earliest)).append("\n");
    sb.append("    filterExpr: ").append(toIndentedString(filterExpr)).append("\n");
    sb.append("    maxValues: ").append(toIndentedString(maxValues)).append("\n");
    sb.append("    metricNameFilter: ").append(toIndentedString(metricNameFilter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
