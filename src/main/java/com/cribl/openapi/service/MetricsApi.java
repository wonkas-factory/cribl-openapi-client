/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.service;

import com.cribl.openapi.client.ApiCallback;
import com.cribl.openapi.client.ApiClient;
import com.cribl.openapi.client.ApiException;
import com.cribl.openapi.client.ApiResponse;
import com.cribl.openapi.client.Configuration;
import com.cribl.openapi.client.Pair;
import com.cribl.openapi.client.ProgressRequestBody;
import com.cribl.openapi.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.math.BigDecimal;
import com.cribl.openapi.dto.Error;
import com.cribl.openapi.dto.GetNamesOpts;
import com.cribl.openapi.dto.InlineResponse20015;
import com.cribl.openapi.dto.InlineResponse20044;
import com.cribl.openapi.dto.MetricsAggOpts;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MetricsApi {
    private ApiClient apiClient;

    public MetricsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public MetricsApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for systemMetricsEnumPost
     * @param body GetNamesOpts object (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call systemMetricsEnumPostCall(GetNamesOpts body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/system/metrics/enum";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "bearerAuth" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call systemMetricsEnumPostValidateBeforeCall(GetNamesOpts body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = systemMetricsEnumPostCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Enumerate all internal system metrics
     * Enumerate all internal system metrics
     * @param body GetNamesOpts object (optional)
     * @return InlineResponse20044
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse20044 systemMetricsEnumPost(GetNamesOpts body) throws ApiException {
        ApiResponse<InlineResponse20044> resp = systemMetricsEnumPostWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Enumerate all internal system metrics
     * Enumerate all internal system metrics
     * @param body GetNamesOpts object (optional)
     * @return ApiResponse&lt;InlineResponse20044&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse20044> systemMetricsEnumPostWithHttpInfo(GetNamesOpts body) throws ApiException {
        com.squareup.okhttp.Call call = systemMetricsEnumPostValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse20044>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Enumerate all internal system metrics (asynchronously)
     * Enumerate all internal system metrics
     * @param body GetNamesOpts object (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call systemMetricsEnumPostAsync(GetNamesOpts body, final ApiCallback<InlineResponse20044> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = systemMetricsEnumPostValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse20044>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for systemMetricsGet
     * @param numBuckets buckets in the past to include in the query results (optional)
     * @param earliest earliest time to query against (optional)
     * @param latest latest time to query against (optional)
     * @param metricNameFilter can be a regex or an array of metric names (optional)
     * @param filterExpr a js expression to apply against the metrics returned (can filter dimensions) (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call systemMetricsGetCall(BigDecimal numBuckets, BigDecimal earliest, BigDecimal latest, String metricNameFilter, String filterExpr, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/system/metrics";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (numBuckets != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("numBuckets", numBuckets));
        if (earliest != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("earliest", earliest));
        if (latest != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("latest", latest));
        if (metricNameFilter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("metricNameFilter", metricNameFilter));
        if (filterExpr != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("filterExpr", filterExpr));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "bearerAuth" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call systemMetricsGetValidateBeforeCall(BigDecimal numBuckets, BigDecimal earliest, BigDecimal latest, String metricNameFilter, String filterExpr, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = systemMetricsGetCall(numBuckets, earliest, latest, metricNameFilter, filterExpr, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Query raw internal system metrics
     * Query raw internal system metrics
     * @param numBuckets buckets in the past to include in the query results (optional)
     * @param earliest earliest time to query against (optional)
     * @param latest latest time to query against (optional)
     * @param metricNameFilter can be a regex or an array of metric names (optional)
     * @param filterExpr a js expression to apply against the metrics returned (can filter dimensions) (optional)
     * @return InlineResponse20015
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse20015 systemMetricsGet(BigDecimal numBuckets, BigDecimal earliest, BigDecimal latest, String metricNameFilter, String filterExpr) throws ApiException {
        ApiResponse<InlineResponse20015> resp = systemMetricsGetWithHttpInfo(numBuckets, earliest, latest, metricNameFilter, filterExpr);
        return resp.getData();
    }

    /**
     * Query raw internal system metrics
     * Query raw internal system metrics
     * @param numBuckets buckets in the past to include in the query results (optional)
     * @param earliest earliest time to query against (optional)
     * @param latest latest time to query against (optional)
     * @param metricNameFilter can be a regex or an array of metric names (optional)
     * @param filterExpr a js expression to apply against the metrics returned (can filter dimensions) (optional)
     * @return ApiResponse&lt;InlineResponse20015&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse20015> systemMetricsGetWithHttpInfo(BigDecimal numBuckets, BigDecimal earliest, BigDecimal latest, String metricNameFilter, String filterExpr) throws ApiException {
        com.squareup.okhttp.Call call = systemMetricsGetValidateBeforeCall(numBuckets, earliest, latest, metricNameFilter, filterExpr, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse20015>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Query raw internal system metrics (asynchronously)
     * Query raw internal system metrics
     * @param numBuckets buckets in the past to include in the query results (optional)
     * @param earliest earliest time to query against (optional)
     * @param latest latest time to query against (optional)
     * @param metricNameFilter can be a regex or an array of metric names (optional)
     * @param filterExpr a js expression to apply against the metrics returned (can filter dimensions) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call systemMetricsGetAsync(BigDecimal numBuckets, BigDecimal earliest, BigDecimal latest, String metricNameFilter, String filterExpr, final ApiCallback<InlineResponse20015> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = systemMetricsGetValidateBeforeCall(numBuckets, earliest, latest, metricNameFilter, filterExpr, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse20015>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for systemMetricsQueryPost
     * @param body MetricsAggOpts object (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call systemMetricsQueryPostCall(MetricsAggOpts body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/system/metrics/query";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "bearerAuth" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call systemMetricsQueryPostValidateBeforeCall(MetricsAggOpts body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = systemMetricsQueryPostCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Aggregate raw internal system metrics
     * Aggregate raw internal system metrics
     * @param body MetricsAggOpts object (optional)
     * @return InlineResponse20015
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse20015 systemMetricsQueryPost(MetricsAggOpts body) throws ApiException {
        ApiResponse<InlineResponse20015> resp = systemMetricsQueryPostWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Aggregate raw internal system metrics
     * Aggregate raw internal system metrics
     * @param body MetricsAggOpts object (optional)
     * @return ApiResponse&lt;InlineResponse20015&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse20015> systemMetricsQueryPostWithHttpInfo(MetricsAggOpts body) throws ApiException {
        com.squareup.okhttp.Call call = systemMetricsQueryPostValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse20015>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Aggregate raw internal system metrics (asynchronously)
     * Aggregate raw internal system metrics
     * @param body MetricsAggOpts object (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call systemMetricsQueryPostAsync(MetricsAggOpts body, final ApiCallback<InlineResponse20015> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = systemMetricsQueryPostValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse20015>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
