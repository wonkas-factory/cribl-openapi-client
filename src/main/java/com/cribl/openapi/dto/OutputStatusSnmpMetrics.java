/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * OutputStatusSnmpMetrics
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-08T00:23:34.796-04:00[America/New_York]")
public class OutputStatusSnmpMetrics implements OneOfOutputStatusStatusMetrics {
  @SerializedName("persistentQueueSize")
  private BigDecimal persistentQueueSize = null;

  @SerializedName("numSent")
  private BigDecimal numSent = null;

  @SerializedName("numIgnored")
  private BigDecimal numIgnored = null;

  @SerializedName("numBytes")
  private BigDecimal numBytes = null;

  @SerializedName("numV1")
  private BigDecimal numV1 = null;

  @SerializedName("numV2c")
  private BigDecimal numV2c = null;

  @SerializedName("numV3")
  private BigDecimal numV3 = null;

  public OutputStatusSnmpMetrics persistentQueueSize(BigDecimal persistentQueueSize) {
    this.persistentQueueSize = persistentQueueSize;
    return this;
  }

   /**
   * The number of bytes stored in the persistent queue
   * @return persistentQueueSize
  **/
  @Schema(description = "The number of bytes stored in the persistent queue")
  public BigDecimal getPersistentQueueSize() {
    return persistentQueueSize;
  }

  public void setPersistentQueueSize(BigDecimal persistentQueueSize) {
    this.persistentQueueSize = persistentQueueSize;
  }

  public OutputStatusSnmpMetrics numSent(BigDecimal numSent) {
    this.numSent = numSent;
    return this;
  }

   /**
   * Number of SNMP traps sent
   * @return numSent
  **/
  @Schema(description = "Number of SNMP traps sent")
  public BigDecimal getNumSent() {
    return numSent;
  }

  public void setNumSent(BigDecimal numSent) {
    this.numSent = numSent;
  }

  public OutputStatusSnmpMetrics numIgnored(BigDecimal numIgnored) {
    this.numIgnored = numIgnored;
    return this;
  }

   /**
   * Number messages ignored not received from snmp input
   * @return numIgnored
  **/
  @Schema(description = "Number messages ignored not received from snmp input")
  public BigDecimal getNumIgnored() {
    return numIgnored;
  }

  public void setNumIgnored(BigDecimal numIgnored) {
    this.numIgnored = numIgnored;
  }

  public OutputStatusSnmpMetrics numBytes(BigDecimal numBytes) {
    this.numBytes = numBytes;
    return this;
  }

   /**
   * Number bytes sent
   * @return numBytes
  **/
  @Schema(description = "Number bytes sent")
  public BigDecimal getNumBytes() {
    return numBytes;
  }

  public void setNumBytes(BigDecimal numBytes) {
    this.numBytes = numBytes;
  }

  public OutputStatusSnmpMetrics numV1(BigDecimal numV1) {
    this.numV1 = numV1;
    return this;
  }

   /**
   * Number SNMP V1 traps sent
   * @return numV1
  **/
  @Schema(description = "Number SNMP V1 traps sent")
  public BigDecimal getNumV1() {
    return numV1;
  }

  public void setNumV1(BigDecimal numV1) {
    this.numV1 = numV1;
  }

  public OutputStatusSnmpMetrics numV2c(BigDecimal numV2c) {
    this.numV2c = numV2c;
    return this;
  }

   /**
   * Number SNMP V2c traps sent
   * @return numV2c
  **/
  @Schema(description = "Number SNMP V2c traps sent")
  public BigDecimal getNumV2c() {
    return numV2c;
  }

  public void setNumV2c(BigDecimal numV2c) {
    this.numV2c = numV2c;
  }

  public OutputStatusSnmpMetrics numV3(BigDecimal numV3) {
    this.numV3 = numV3;
    return this;
  }

   /**
   * Number SNMP V3 traps sent
   * @return numV3
  **/
  @Schema(description = "Number SNMP V3 traps sent")
  public BigDecimal getNumV3() {
    return numV3;
  }

  public void setNumV3(BigDecimal numV3) {
    this.numV3 = numV3;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutputStatusSnmpMetrics outputStatusSnmpMetrics = (OutputStatusSnmpMetrics) o;
    return Objects.equals(this.persistentQueueSize, outputStatusSnmpMetrics.persistentQueueSize) &&
        Objects.equals(this.numSent, outputStatusSnmpMetrics.numSent) &&
        Objects.equals(this.numIgnored, outputStatusSnmpMetrics.numIgnored) &&
        Objects.equals(this.numBytes, outputStatusSnmpMetrics.numBytes) &&
        Objects.equals(this.numV1, outputStatusSnmpMetrics.numV1) &&
        Objects.equals(this.numV2c, outputStatusSnmpMetrics.numV2c) &&
        Objects.equals(this.numV3, outputStatusSnmpMetrics.numV3);
  }

  @Override
  public int hashCode() {
    return Objects.hash(persistentQueueSize, numSent, numIgnored, numBytes, numV1, numV2c, numV3);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutputStatusSnmpMetrics {\n");
    
    sb.append("    persistentQueueSize: ").append(toIndentedString(persistentQueueSize)).append("\n");
    sb.append("    numSent: ").append(toIndentedString(numSent)).append("\n");
    sb.append("    numIgnored: ").append(toIndentedString(numIgnored)).append("\n");
    sb.append("    numBytes: ").append(toIndentedString(numBytes)).append("\n");
    sb.append("    numV1: ").append(toIndentedString(numV1)).append("\n");
    sb.append("    numV2c: ").append(toIndentedString(numV2c)).append("\n");
    sb.append("    numV3: ").append(toIndentedString(numV3)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
