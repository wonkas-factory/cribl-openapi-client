/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.service;

import com.cribl.openapi.client.ApiException;
import com.cribl.openapi.dto.Error;
import com.cribl.openapi.dto.InlineResponse20015;
import com.cribl.openapi.dto.InlineResponse20033;
import com.cribl.openapi.dto.InlineResponse20034;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobsApi
 */
@Ignore
public class JobsApiTest {

    private final JobsApi api = new JobsApi();

    /**
     * Get info on jobs
     *
     * Get info on jobs
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobsGetTest() throws ApiException {
        Integer offset = null;
        Integer limit = null;
        String runType = null;
        String state = null;
        String id = null;
        String collectorId = null;
        InlineResponse20034 response = api.jobsGet(offset, limit, runType, state, id, collectorId);

        // TODO: test validations
    }
    /**
     * Cancel a job by instance id
     *
     * Cancel a job by instance id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobsIdCancelPatchTest() throws ApiException {
        String id = null;
        InlineResponse20015 response = api.jobsIdCancelPatch(id);

        // TODO: test validations
    }
    /**
     * Remove job from job inspector by instance id
     *
     * Remove job from job inspector by instance id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobsIdDeleteTest() throws ApiException {
        String id = null;
        InlineResponse20015 response = api.jobsIdDelete(id);

        // TODO: test validations
    }
    /**
     * Get Task errors for a job by id
     *
     * Get Task errors for a job by id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobsIdErrorsGetTest() throws ApiException {
        String id = null;
        InlineResponse20015 response = api.jobsIdErrorsGet(id);

        // TODO: test validations
    }
    /**
     * Get Task errors for a job by id
     *
     * Get Task errors for a job by id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobsIdErrorsGroupGetTest() throws ApiException {
        String id = null;
        String group = null;
        InlineResponse20015 response = api.jobsIdErrorsGroupGet(id, group);

        // TODO: test validations
    }
    /**
     * Get job info by instance id
     *
     * Get job info by instance id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobsIdGetTest() throws ApiException {
        String id = null;
        InlineResponse20033 response = api.jobsIdGet(id);

        // TODO: test validations
    }
    /**
     * prevent job from being deleted automatically
     *
     * prevent job from being deleted automatically
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobsIdKeepPatchTest() throws ApiException {
        String id = null;
        InlineResponse20033 response = api.jobsIdKeepPatch(id);

        // TODO: test validations
    }
    /**
     * Pause a job by instance id
     *
     * Pause a job by instance id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobsIdPausePatchTest() throws ApiException {
        String id = null;
        InlineResponse20015 response = api.jobsIdPausePatch(id);

        // TODO: test validations
    }
    /**
     * Get results for a discover job by instance id
     *
     * Get results for a discover job by instance id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobsIdResultsGetTest() throws ApiException {
        String id = null;
        InlineResponse20015 response = api.jobsIdResultsGet(id);

        // TODO: test validations
    }
    /**
     * Get results for a discover job by instance id
     *
     * Get results for a discover job by instance id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobsIdResultsGroupGetTest() throws ApiException {
        String id = null;
        String group = null;
        InlineResponse20015 response = api.jobsIdResultsGroupGet(id, group);

        // TODO: test validations
    }
    /**
     * Resume a job by instance id
     *
     * Resume a job by instance id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void jobsIdResumePatchTest() throws ApiException {
        String id = null;
        InlineResponse20015 response = api.jobsIdResumePatch(id);

        // TODO: test validations
    }
}
