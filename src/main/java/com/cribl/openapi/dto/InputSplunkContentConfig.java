/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * InputSplunkContentConfig
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-08T00:23:34.796-04:00[America/New_York]")
public class InputSplunkContentConfig {
  @SerializedName("contentType")
  private String contentType = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("interval")
  private BigDecimal interval = null;

  /**
   * Collector runtime Log Level
   */
  @JsonAdapter(LogLevelEnum.Adapter.class)
  public enum LogLevelEnum {
    ERROR("error"),
    WARN("warn"),
    INFO("info"),
    DEBUG("debug");

    private String value;

    LogLevelEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static LogLevelEnum fromValue(String text) {
      for (LogLevelEnum b : LogLevelEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<LogLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LogLevelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LogLevelEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return LogLevelEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("logLevel")
  private LogLevelEnum logLevel = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  public InputSplunkContentConfig contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
   * Office 365 Management Activity API Content Type
   * @return contentType
  **/
  @Schema(description = "Office 365 Management Activity API Content Type")
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }

  public InputSplunkContentConfig description(String description) {
    this.description = description;
    return this;
  }

   /**
   * If interval type is minutes the value entered must evenly divisible by 60 or save will fail
   * @return description
  **/
  @Schema(description = "If interval type is minutes the value entered must evenly divisible by 60 or save will fail")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public InputSplunkContentConfig interval(BigDecimal interval) {
    this.interval = interval;
    return this;
  }

   /**
   * Get interval
   * minimum: 1
   * maximum: 60
   * @return interval
  **/
  @Schema(description = "")
  public BigDecimal getInterval() {
    return interval;
  }

  public void setInterval(BigDecimal interval) {
    this.interval = interval;
  }

  public InputSplunkContentConfig logLevel(LogLevelEnum logLevel) {
    this.logLevel = logLevel;
    return this;
  }

   /**
   * Collector runtime Log Level
   * @return logLevel
  **/
  @Schema(description = "Collector runtime Log Level")
  public LogLevelEnum getLogLevel() {
    return logLevel;
  }

  public void setLogLevel(LogLevelEnum logLevel) {
    this.logLevel = logLevel;
  }

  public InputSplunkContentConfig enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InputSplunkContentConfig inputSplunkContentConfig = (InputSplunkContentConfig) o;
    return Objects.equals(this.contentType, inputSplunkContentConfig.contentType) &&
        Objects.equals(this.description, inputSplunkContentConfig.description) &&
        Objects.equals(this.interval, inputSplunkContentConfig.interval) &&
        Objects.equals(this.logLevel, inputSplunkContentConfig.logLevel) &&
        Objects.equals(this.enabled, inputSplunkContentConfig.enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentType, description, interval, logLevel, enabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InputSplunkContentConfig {\n");
    
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    logLevel: ").append(toIndentedString(logLevel)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
