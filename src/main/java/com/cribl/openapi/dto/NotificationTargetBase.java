/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * NotificationTargetBase
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-08T00:23:34.796-04:00[America/New_York]")
public class NotificationTargetBase {
  @SerializedName("id")
  private String id = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    DEFAULT("default"),
    WEBHOOK("webhook"),
    BULLETIN_MESSAGE("bulletin_message"),
    ROUTER("router"),
    NOTIFICATIONS_LOG("notifications_log"),
    PAGER_DUTY("pager_duty");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("systemFields")
  private List<String> systemFields = null;

  public NotificationTargetBase id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique ID for this output
   * @return id
  **/
  @Schema(required = true, description = "Unique ID for this output")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public NotificationTargetBase type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public NotificationTargetBase systemFields(List<String> systemFields) {
    this.systemFields = systemFields;
    return this;
  }

  public NotificationTargetBase addSystemFieldsItem(String systemFieldsItem) {
    if (this.systemFields == null) {
      this.systemFields = new ArrayList<>();
    }
    this.systemFields.add(systemFieldsItem);
    return this;
  }

   /**
   * Set of fields to automatically add to events using this output. E.g.: cribl_pipe, c*. Wildcards supported.
   * @return systemFields
  **/
  @Schema(description = "Set of fields to automatically add to events using this output. E.g.: cribl_pipe, c*. Wildcards supported.")
  public List<String> getSystemFields() {
    return systemFields;
  }

  public void setSystemFields(List<String> systemFields) {
    this.systemFields = systemFields;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationTargetBase notificationTargetBase = (NotificationTargetBase) o;
    return Objects.equals(this.id, notificationTargetBase.id) &&
        Objects.equals(this.type, notificationTargetBase.type) &&
        Objects.equals(this.systemFields, notificationTargetBase.systemFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, systemFields);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationTargetBase {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    systemFields: ").append(toIndentedString(systemFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
