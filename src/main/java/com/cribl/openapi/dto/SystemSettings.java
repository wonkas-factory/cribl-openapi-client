/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import com.cribl.openapi.dto.AuthConfig;
import com.cribl.openapi.dto.JobSettings;
import com.cribl.openapi.dto.SystemSettingsApi;
import com.cribl.openapi.dto.SystemSettingsBackups;
import com.cribl.openapi.dto.SystemSettingsCustomLogo;
import com.cribl.openapi.dto.SystemSettingsDistributed;
import com.cribl.openapi.dto.SystemSettingsGit;
import com.cribl.openapi.dto.SystemSettingsLimits;
import com.cribl.openapi.dto.SystemSettingsProxy;
import com.cribl.openapi.dto.SystemSettingsRollback;
import com.cribl.openapi.dto.SystemSettingsSystem;
import com.cribl.openapi.dto.SystemSettingsTls;
import com.cribl.openapi.dto.SystemSettingsUpgradeSettings;
import com.cribl.openapi.dto.SystemSettingsWorkers;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SystemSettings
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-08T00:23:34.796-04:00[America/New_York]")
public class SystemSettings {
  @SerializedName("api")
  private SystemSettingsApi api = null;

  @SerializedName("auth")
  private AuthConfig auth = null;

  @SerializedName("backups")
  private SystemSettingsBackups backups = null;

  @SerializedName("customLogo")
  private SystemSettingsCustomLogo customLogo = null;

  @SerializedName("distributed")
  private SystemSettingsDistributed distributed = null;

  @SerializedName("git")
  private SystemSettingsGit git = null;

  @SerializedName("jobLimits")
  private JobSettings jobLimits = null;

  @SerializedName("limits")
  private SystemSettingsLimits limits = null;

  @SerializedName("proxy")
  private SystemSettingsProxy proxy = null;

  @SerializedName("rollback")
  private SystemSettingsRollback rollback = null;

  @SerializedName("system")
  private SystemSettingsSystem system = null;

  @SerializedName("tls")
  private SystemSettingsTls tls = null;

  @SerializedName("upgradeSettings")
  private SystemSettingsUpgradeSettings upgradeSettings = null;

  @SerializedName("workers")
  private SystemSettingsWorkers workers = null;

  public SystemSettings api(SystemSettingsApi api) {
    this.api = api;
    return this;
  }

   /**
   * Get api
   * @return api
  **/
  @Schema(description = "")
  public SystemSettingsApi getApi() {
    return api;
  }

  public void setApi(SystemSettingsApi api) {
    this.api = api;
  }

  public SystemSettings auth(AuthConfig auth) {
    this.auth = auth;
    return this;
  }

   /**
   * Get auth
   * @return auth
  **/
  @Schema(description = "")
  public AuthConfig getAuth() {
    return auth;
  }

  public void setAuth(AuthConfig auth) {
    this.auth = auth;
  }

  public SystemSettings backups(SystemSettingsBackups backups) {
    this.backups = backups;
    return this;
  }

   /**
   * Get backups
   * @return backups
  **/
  @Schema(description = "")
  public SystemSettingsBackups getBackups() {
    return backups;
  }

  public void setBackups(SystemSettingsBackups backups) {
    this.backups = backups;
  }

  public SystemSettings customLogo(SystemSettingsCustomLogo customLogo) {
    this.customLogo = customLogo;
    return this;
  }

   /**
   * Get customLogo
   * @return customLogo
  **/
  @Schema(description = "")
  public SystemSettingsCustomLogo getCustomLogo() {
    return customLogo;
  }

  public void setCustomLogo(SystemSettingsCustomLogo customLogo) {
    this.customLogo = customLogo;
  }

  public SystemSettings distributed(SystemSettingsDistributed distributed) {
    this.distributed = distributed;
    return this;
  }

   /**
   * Get distributed
   * @return distributed
  **/
  @Schema(description = "")
  public SystemSettingsDistributed getDistributed() {
    return distributed;
  }

  public void setDistributed(SystemSettingsDistributed distributed) {
    this.distributed = distributed;
  }

  public SystemSettings git(SystemSettingsGit git) {
    this.git = git;
    return this;
  }

   /**
   * Get git
   * @return git
  **/
  @Schema(description = "")
  public SystemSettingsGit getGit() {
    return git;
  }

  public void setGit(SystemSettingsGit git) {
    this.git = git;
  }

  public SystemSettings jobLimits(JobSettings jobLimits) {
    this.jobLimits = jobLimits;
    return this;
  }

   /**
   * Get jobLimits
   * @return jobLimits
  **/
  @Schema(description = "")
  public JobSettings getJobLimits() {
    return jobLimits;
  }

  public void setJobLimits(JobSettings jobLimits) {
    this.jobLimits = jobLimits;
  }

  public SystemSettings limits(SystemSettingsLimits limits) {
    this.limits = limits;
    return this;
  }

   /**
   * Get limits
   * @return limits
  **/
  @Schema(description = "")
  public SystemSettingsLimits getLimits() {
    return limits;
  }

  public void setLimits(SystemSettingsLimits limits) {
    this.limits = limits;
  }

  public SystemSettings proxy(SystemSettingsProxy proxy) {
    this.proxy = proxy;
    return this;
  }

   /**
   * Get proxy
   * @return proxy
  **/
  @Schema(description = "")
  public SystemSettingsProxy getProxy() {
    return proxy;
  }

  public void setProxy(SystemSettingsProxy proxy) {
    this.proxy = proxy;
  }

  public SystemSettings rollback(SystemSettingsRollback rollback) {
    this.rollback = rollback;
    return this;
  }

   /**
   * Get rollback
   * @return rollback
  **/
  @Schema(description = "")
  public SystemSettingsRollback getRollback() {
    return rollback;
  }

  public void setRollback(SystemSettingsRollback rollback) {
    this.rollback = rollback;
  }

  public SystemSettings system(SystemSettingsSystem system) {
    this.system = system;
    return this;
  }

   /**
   * Get system
   * @return system
  **/
  @Schema(description = "")
  public SystemSettingsSystem getSystem() {
    return system;
  }

  public void setSystem(SystemSettingsSystem system) {
    this.system = system;
  }

  public SystemSettings tls(SystemSettingsTls tls) {
    this.tls = tls;
    return this;
  }

   /**
   * Get tls
   * @return tls
  **/
  @Schema(description = "")
  public SystemSettingsTls getTls() {
    return tls;
  }

  public void setTls(SystemSettingsTls tls) {
    this.tls = tls;
  }

  public SystemSettings upgradeSettings(SystemSettingsUpgradeSettings upgradeSettings) {
    this.upgradeSettings = upgradeSettings;
    return this;
  }

   /**
   * Get upgradeSettings
   * @return upgradeSettings
  **/
  @Schema(description = "")
  public SystemSettingsUpgradeSettings getUpgradeSettings() {
    return upgradeSettings;
  }

  public void setUpgradeSettings(SystemSettingsUpgradeSettings upgradeSettings) {
    this.upgradeSettings = upgradeSettings;
  }

  public SystemSettings workers(SystemSettingsWorkers workers) {
    this.workers = workers;
    return this;
  }

   /**
   * Get workers
   * @return workers
  **/
  @Schema(description = "")
  public SystemSettingsWorkers getWorkers() {
    return workers;
  }

  public void setWorkers(SystemSettingsWorkers workers) {
    this.workers = workers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemSettings systemSettings = (SystemSettings) o;
    return Objects.equals(this.api, systemSettings.api) &&
        Objects.equals(this.auth, systemSettings.auth) &&
        Objects.equals(this.backups, systemSettings.backups) &&
        Objects.equals(this.customLogo, systemSettings.customLogo) &&
        Objects.equals(this.distributed, systemSettings.distributed) &&
        Objects.equals(this.git, systemSettings.git) &&
        Objects.equals(this.jobLimits, systemSettings.jobLimits) &&
        Objects.equals(this.limits, systemSettings.limits) &&
        Objects.equals(this.proxy, systemSettings.proxy) &&
        Objects.equals(this.rollback, systemSettings.rollback) &&
        Objects.equals(this.system, systemSettings.system) &&
        Objects.equals(this.tls, systemSettings.tls) &&
        Objects.equals(this.upgradeSettings, systemSettings.upgradeSettings) &&
        Objects.equals(this.workers, systemSettings.workers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(api, auth, backups, customLogo, distributed, git, jobLimits, limits, proxy, rollback, system, tls, upgradeSettings, workers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemSettings {\n");
    
    sb.append("    api: ").append(toIndentedString(api)).append("\n");
    sb.append("    auth: ").append(toIndentedString(auth)).append("\n");
    sb.append("    backups: ").append(toIndentedString(backups)).append("\n");
    sb.append("    customLogo: ").append(toIndentedString(customLogo)).append("\n");
    sb.append("    distributed: ").append(toIndentedString(distributed)).append("\n");
    sb.append("    git: ").append(toIndentedString(git)).append("\n");
    sb.append("    jobLimits: ").append(toIndentedString(jobLimits)).append("\n");
    sb.append("    limits: ").append(toIndentedString(limits)).append("\n");
    sb.append("    proxy: ").append(toIndentedString(proxy)).append("\n");
    sb.append("    rollback: ").append(toIndentedString(rollback)).append("\n");
    sb.append("    system: ").append(toIndentedString(system)).append("\n");
    sb.append("    tls: ").append(toIndentedString(tls)).append("\n");
    sb.append("    upgradeSettings: ").append(toIndentedString(upgradeSettings)).append("\n");
    sb.append("    workers: ").append(toIndentedString(workers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
