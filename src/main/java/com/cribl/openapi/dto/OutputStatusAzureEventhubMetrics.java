/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * OutputStatusAzureEventhubMetrics
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-08T00:23:34.796-04:00[America/New_York]")
public class OutputStatusAzureEventhubMetrics implements OneOfOutputStatusStatusMetrics {
  @SerializedName("persistentQueueSize")
  private BigDecimal persistentQueueSize = null;

  @SerializedName("flushInProgress")
  private Boolean flushInProgress = null;

  @SerializedName("lastFlushTime")
  private BigDecimal lastFlushTime = null;

  @SerializedName("currentBufferLength")
  private BigDecimal currentBufferLength = null;

  @SerializedName("currentBufferEventCount")
  private BigDecimal currentBufferEventCount = null;

  public OutputStatusAzureEventhubMetrics persistentQueueSize(BigDecimal persistentQueueSize) {
    this.persistentQueueSize = persistentQueueSize;
    return this;
  }

   /**
   * The number of bytes stored in the persistent queue
   * @return persistentQueueSize
  **/
  @Schema(description = "The number of bytes stored in the persistent queue")
  public BigDecimal getPersistentQueueSize() {
    return persistentQueueSize;
  }

  public void setPersistentQueueSize(BigDecimal persistentQueueSize) {
    this.persistentQueueSize = persistentQueueSize;
  }

  public OutputStatusAzureEventhubMetrics flushInProgress(Boolean flushInProgress) {
    this.flushInProgress = flushInProgress;
    return this;
  }

   /**
   * Whether or not the buffer is flushing to Kafka
   * @return flushInProgress
  **/
  @Schema(description = "Whether or not the buffer is flushing to Kafka")
  public Boolean isFlushInProgress() {
    return flushInProgress;
  }

  public void setFlushInProgress(Boolean flushInProgress) {
    this.flushInProgress = flushInProgress;
  }

  public OutputStatusAzureEventhubMetrics lastFlushTime(BigDecimal lastFlushTime) {
    this.lastFlushTime = lastFlushTime;
    return this;
  }

   /**
   * Time when buffer was last flushed.
   * @return lastFlushTime
  **/
  @Schema(description = "Time when buffer was last flushed.")
  public BigDecimal getLastFlushTime() {
    return lastFlushTime;
  }

  public void setLastFlushTime(BigDecimal lastFlushTime) {
    this.lastFlushTime = lastFlushTime;
  }

  public OutputStatusAzureEventhubMetrics currentBufferLength(BigDecimal currentBufferLength) {
    this.currentBufferLength = currentBufferLength;
    return this;
  }

   /**
   * The number of characters stored in the buffer
   * @return currentBufferLength
  **/
  @Schema(description = "The number of characters stored in the buffer")
  public BigDecimal getCurrentBufferLength() {
    return currentBufferLength;
  }

  public void setCurrentBufferLength(BigDecimal currentBufferLength) {
    this.currentBufferLength = currentBufferLength;
  }

  public OutputStatusAzureEventhubMetrics currentBufferEventCount(BigDecimal currentBufferEventCount) {
    this.currentBufferEventCount = currentBufferEventCount;
    return this;
  }

   /**
   * The number of events currently stored in the buffer
   * @return currentBufferEventCount
  **/
  @Schema(description = "The number of events currently stored in the buffer")
  public BigDecimal getCurrentBufferEventCount() {
    return currentBufferEventCount;
  }

  public void setCurrentBufferEventCount(BigDecimal currentBufferEventCount) {
    this.currentBufferEventCount = currentBufferEventCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutputStatusAzureEventhubMetrics outputStatusAzureEventhubMetrics = (OutputStatusAzureEventhubMetrics) o;
    return Objects.equals(this.persistentQueueSize, outputStatusAzureEventhubMetrics.persistentQueueSize) &&
        Objects.equals(this.flushInProgress, outputStatusAzureEventhubMetrics.flushInProgress) &&
        Objects.equals(this.lastFlushTime, outputStatusAzureEventhubMetrics.lastFlushTime) &&
        Objects.equals(this.currentBufferLength, outputStatusAzureEventhubMetrics.currentBufferLength) &&
        Objects.equals(this.currentBufferEventCount, outputStatusAzureEventhubMetrics.currentBufferEventCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(persistentQueueSize, flushInProgress, lastFlushTime, currentBufferLength, currentBufferEventCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutputStatusAzureEventhubMetrics {\n");
    
    sb.append("    persistentQueueSize: ").append(toIndentedString(persistentQueueSize)).append("\n");
    sb.append("    flushInProgress: ").append(toIndentedString(flushInProgress)).append("\n");
    sb.append("    lastFlushTime: ").append(toIndentedString(lastFlushTime)).append("\n");
    sb.append("    currentBufferLength: ").append(toIndentedString(currentBufferLength)).append("\n");
    sb.append("    currentBufferEventCount: ").append(toIndentedString(currentBufferEventCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
