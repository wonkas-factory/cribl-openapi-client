/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SystemSettingsApiSsl
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-08T00:23:34.796-04:00[America/New_York]")
public class SystemSettingsApiSsl {
  @SerializedName("certPath")
  private String certPath = null;

  @SerializedName("disabled")
  private Boolean disabled = null;

  @SerializedName("passphrase")
  private String passphrase = null;

  @SerializedName("privKeyPath")
  private String privKeyPath = null;

  public SystemSettingsApiSsl certPath(String certPath) {
    this.certPath = certPath;
    return this;
  }

   /**
   * Get certPath
   * @return certPath
  **/
  @Schema(description = "")
  public String getCertPath() {
    return certPath;
  }

  public void setCertPath(String certPath) {
    this.certPath = certPath;
  }

  public SystemSettingsApiSsl disabled(Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @Schema(description = "")
  public Boolean isDisabled() {
    return disabled;
  }

  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }

  public SystemSettingsApiSsl passphrase(String passphrase) {
    this.passphrase = passphrase;
    return this;
  }

   /**
   * Get passphrase
   * @return passphrase
  **/
  @Schema(description = "")
  public String getPassphrase() {
    return passphrase;
  }

  public void setPassphrase(String passphrase) {
    this.passphrase = passphrase;
  }

  public SystemSettingsApiSsl privKeyPath(String privKeyPath) {
    this.privKeyPath = privKeyPath;
    return this;
  }

   /**
   * Get privKeyPath
   * @return privKeyPath
  **/
  @Schema(description = "")
  public String getPrivKeyPath() {
    return privKeyPath;
  }

  public void setPrivKeyPath(String privKeyPath) {
    this.privKeyPath = privKeyPath;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemSettingsApiSsl systemSettingsApiSsl = (SystemSettingsApiSsl) o;
    return Objects.equals(this.certPath, systemSettingsApiSsl.certPath) &&
        Objects.equals(this.disabled, systemSettingsApiSsl.disabled) &&
        Objects.equals(this.passphrase, systemSettingsApiSsl.passphrase) &&
        Objects.equals(this.privKeyPath, systemSettingsApiSsl.privKeyPath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certPath, disabled, passphrase, privKeyPath);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemSettingsApiSsl {\n");
    
    sb.append("    certPath: ").append(toIndentedString(certPath)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    passphrase: ").append(toIndentedString(passphrase)).append("\n");
    sb.append("    privKeyPath: ").append(toIndentedString(privKeyPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
