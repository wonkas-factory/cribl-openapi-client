/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import com.cribl.openapi.dto.ExpressionOptions;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
/**
 * Expression
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-08T00:23:34.796-04:00[America/New_York]")
public class Expression {
  @SerializedName("declaredVariables")
  private List<String> declaredVariables = null;

  @SerializedName("isSafe")
  private Boolean isSafe = null;

  @SerializedName("modifiedExpression")
  private String modifiedExpression = null;

  @SerializedName("opt")
  private ExpressionOptions opt = null;

  @SerializedName("originalExpression")
  private String originalExpression = null;

  @SerializedName("partialExpression")
  private String partialExpression = null;

  @SerializedName("referencedCriblExport")
  private Boolean referencedCriblExport = null;

  @SerializedName("replaceLiteralExpression")
  private String replaceLiteralExpression = null;

  @SerializedName("MAX_CACHE")
  private BigDecimal MAX_CACHE = null;

  @SerializedName("cache")
  private Map cache = null;

  public Expression declaredVariables(List<String> declaredVariables) {
    this.declaredVariables = declaredVariables;
    return this;
  }

  public Expression addDeclaredVariablesItem(String declaredVariablesItem) {
    if (this.declaredVariables == null) {
      this.declaredVariables = new ArrayList<>();
    }
    this.declaredVariables.add(declaredVariablesItem);
    return this;
  }

   /**
   * Get declaredVariables
   * @return declaredVariables
  **/
  @Schema(description = "")
  public List<String> getDeclaredVariables() {
    return declaredVariables;
  }

  public void setDeclaredVariables(List<String> declaredVariables) {
    this.declaredVariables = declaredVariables;
  }

  public Expression isSafe(Boolean isSafe) {
    this.isSafe = isSafe;
    return this;
  }

   /**
   * Get isSafe
   * @return isSafe
  **/
  @Schema(description = "")
  public Boolean isIsSafe() {
    return isSafe;
  }

  public void setIsSafe(Boolean isSafe) {
    this.isSafe = isSafe;
  }

  public Expression modifiedExpression(String modifiedExpression) {
    this.modifiedExpression = modifiedExpression;
    return this;
  }

   /**
   * Get modifiedExpression
   * @return modifiedExpression
  **/
  @Schema(description = "")
  public String getModifiedExpression() {
    return modifiedExpression;
  }

  public void setModifiedExpression(String modifiedExpression) {
    this.modifiedExpression = modifiedExpression;
  }

  public Expression opt(ExpressionOptions opt) {
    this.opt = opt;
    return this;
  }

   /**
   * Get opt
   * @return opt
  **/
  @Schema(description = "")
  public ExpressionOptions getOpt() {
    return opt;
  }

  public void setOpt(ExpressionOptions opt) {
    this.opt = opt;
  }

  public Expression originalExpression(String originalExpression) {
    this.originalExpression = originalExpression;
    return this;
  }

   /**
   * Get originalExpression
   * @return originalExpression
  **/
  @Schema(description = "")
  public String getOriginalExpression() {
    return originalExpression;
  }

  public void setOriginalExpression(String originalExpression) {
    this.originalExpression = originalExpression;
  }

  public Expression partialExpression(String partialExpression) {
    this.partialExpression = partialExpression;
    return this;
  }

   /**
   * Get partialExpression
   * @return partialExpression
  **/
  @Schema(description = "")
  public String getPartialExpression() {
    return partialExpression;
  }

  public void setPartialExpression(String partialExpression) {
    this.partialExpression = partialExpression;
  }

  public Expression referencedCriblExport(Boolean referencedCriblExport) {
    this.referencedCriblExport = referencedCriblExport;
    return this;
  }

   /**
   * Get referencedCriblExport
   * @return referencedCriblExport
  **/
  @Schema(description = "")
  public Boolean isReferencedCriblExport() {
    return referencedCriblExport;
  }

  public void setReferencedCriblExport(Boolean referencedCriblExport) {
    this.referencedCriblExport = referencedCriblExport;
  }

  public Expression replaceLiteralExpression(String replaceLiteralExpression) {
    this.replaceLiteralExpression = replaceLiteralExpression;
    return this;
  }

   /**
   * Get replaceLiteralExpression
   * @return replaceLiteralExpression
  **/
  @Schema(description = "")
  public String getReplaceLiteralExpression() {
    return replaceLiteralExpression;
  }

  public void setReplaceLiteralExpression(String replaceLiteralExpression) {
    this.replaceLiteralExpression = replaceLiteralExpression;
  }

  public Expression MAX_CACHE(BigDecimal MAX_CACHE) {
    this.MAX_CACHE = MAX_CACHE;
    return this;
  }

   /**
   * Get MAX_CACHE
   * @return MAX_CACHE
  **/
  @Schema(description = "")
  public BigDecimal getMAXCACHE() {
    return MAX_CACHE;
  }

  public void setMAXCACHE(BigDecimal MAX_CACHE) {
    this.MAX_CACHE = MAX_CACHE;
  }

  public Expression cache(Map cache) {
    this.cache = cache;
    return this;
  }

   /**
   * Get cache
   * @return cache
  **/
  @Schema(description = "")
  public Map getCache() {
    return cache;
  }

  public void setCache(Map cache) {
    this.cache = cache;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Expression expression = (Expression) o;
    return Objects.equals(this.declaredVariables, expression.declaredVariables) &&
        Objects.equals(this.isSafe, expression.isSafe) &&
        Objects.equals(this.modifiedExpression, expression.modifiedExpression) &&
        Objects.equals(this.opt, expression.opt) &&
        Objects.equals(this.originalExpression, expression.originalExpression) &&
        Objects.equals(this.partialExpression, expression.partialExpression) &&
        Objects.equals(this.referencedCriblExport, expression.referencedCriblExport) &&
        Objects.equals(this.replaceLiteralExpression, expression.replaceLiteralExpression) &&
        Objects.equals(this.MAX_CACHE, expression.MAX_CACHE) &&
        Objects.equals(this.cache, expression.cache);
  }

  @Override
  public int hashCode() {
    return Objects.hash(declaredVariables, isSafe, modifiedExpression, opt, originalExpression, partialExpression, referencedCriblExport, replaceLiteralExpression, MAX_CACHE, cache);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Expression {\n");
    
    sb.append("    declaredVariables: ").append(toIndentedString(declaredVariables)).append("\n");
    sb.append("    isSafe: ").append(toIndentedString(isSafe)).append("\n");
    sb.append("    modifiedExpression: ").append(toIndentedString(modifiedExpression)).append("\n");
    sb.append("    opt: ").append(toIndentedString(opt)).append("\n");
    sb.append("    originalExpression: ").append(toIndentedString(originalExpression)).append("\n");
    sb.append("    partialExpression: ").append(toIndentedString(partialExpression)).append("\n");
    sb.append("    referencedCriblExport: ").append(toIndentedString(referencedCriblExport)).append("\n");
    sb.append("    replaceLiteralExpression: ").append(toIndentedString(replaceLiteralExpression)).append("\n");
    sb.append("    MAX_CACHE: ").append(toIndentedString(MAX_CACHE)).append("\n");
    sb.append("    cache: ").append(toIndentedString(cache)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
