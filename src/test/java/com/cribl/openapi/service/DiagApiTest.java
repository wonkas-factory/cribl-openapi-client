/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.service;

import com.cribl.openapi.client.ApiException;
import com.cribl.openapi.dto.Error;
import java.io.File;
import com.cribl.openapi.dto.HealthStatus;
import com.cribl.openapi.dto.InlineResponse20015;
import com.cribl.openapi.dto.InlineResponse20042;
import com.cribl.openapi.dto.InlineResponse20043;
import com.cribl.openapi.dto.SendDiagBundle;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DiagApi
 */
@Ignore
public class DiagApiTest {

    private final DiagApi api = new DiagApi();

    /**
     * Provides information about the REST server&#x27;s health
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void healthGetTest() throws ApiException {
        HealthStatus response = api.healthGet();

        // TODO: test validations
    }
    /**
     * Remove diag bundle
     *
     * Remove diag bundle
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemDiagDeleteTest() throws ApiException {
        String path = null;
        InlineResponse20015 response = api.systemDiagDelete(path);

        // TODO: test validations
    }
    /**
     * Returns a diag bundle as a tar.gz archive
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemDiagDownloadGetTest() throws ApiException {
        File response = api.systemDiagDownloadGet();

        // TODO: test validations
    }
    /**
     * Get list of existing diag bundles
     *
     * Get list of existing diag bundles
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemDiagGetTest() throws ApiException {
        InlineResponse20043 response = api.systemDiagGet();

        // TODO: test validations
    }
    /**
     * Send a diag bundle (tar.gz archive) to Cribl
     *
     * Send a diag bundle (tar.gz archive) to Cribl
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemDiagSendPostTest() throws ApiException {
        SendDiagBundle body = null;
        InlineResponse20015 response = api.systemDiagSendPost(body);

        // TODO: test validations
    }
    /**
     * Get basic system information
     *
     * Get basic system information
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemInfoGetTest() throws ApiException {
        InlineResponse20042 response = api.systemInfoGet();

        // TODO: test validations
    }
}
