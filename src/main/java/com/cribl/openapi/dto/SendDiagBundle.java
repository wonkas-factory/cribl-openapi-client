/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SendDiagBundle
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-08T00:23:34.796-04:00[America/New_York]")
public class SendDiagBundle {
  @SerializedName("sendToCribl")
  private Boolean sendToCribl = false;

  @SerializedName("path")
  private String path = null;

  @SerializedName("renameJs")
  private Boolean renameJs = true;

  public SendDiagBundle sendToCribl(Boolean sendToCribl) {
    this.sendToCribl = sendToCribl;
    return this;
  }

   /**
   * Send diag bundle to Cribl Support
   * @return sendToCribl
  **/
  @Schema(description = "Send diag bundle to Cribl Support")
  public Boolean isSendToCribl() {
    return sendToCribl;
  }

  public void setSendToCribl(Boolean sendToCribl) {
    this.sendToCribl = sendToCribl;
  }

  public SendDiagBundle path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Existing diag bundle that will be send to Cribl Support. Max 100MB.
   * @return path
  **/
  @Schema(description = "Existing diag bundle that will be send to Cribl Support. Max 100MB.")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public SendDiagBundle renameJs(Boolean renameJs) {
    this.renameJs = renameJs;
    return this;
  }

   /**
   * Append .txt to JavaScript files.
   * @return renameJs
  **/
  @Schema(description = "Append .txt to JavaScript files.")
  public Boolean isRenameJs() {
    return renameJs;
  }

  public void setRenameJs(Boolean renameJs) {
    this.renameJs = renameJs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendDiagBundle sendDiagBundle = (SendDiagBundle) o;
    return Objects.equals(this.sendToCribl, sendDiagBundle.sendToCribl) &&
        Objects.equals(this.path, sendDiagBundle.path) &&
        Objects.equals(this.renameJs, sendDiagBundle.renameJs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sendToCribl, path, renameJs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendDiagBundle {\n");
    
    sb.append("    sendToCribl: ").append(toIndentedString(sendToCribl)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    renameJs: ").append(toIndentedString(renameJs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
