/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.service;

import com.cribl.openapi.client.ApiException;
import com.cribl.openapi.dto.Error;
import com.cribl.openapi.dto.InlineResponse2002;
import com.cribl.openapi.dto.KeyMetadataEntity;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for KeysApi
 */
@Ignore
public class KeysApiTest {

    private final KeysApi api = new KeysApi();

    /**
     * Get a list of KeyMetadataEntity objects
     *
     * Get a list of KeyMetadataEntity objects
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemKeysGetTest() throws ApiException {
        InlineResponse2002 response = api.systemKeysGet();

        // TODO: test validations
    }
    /**
     * Delete KeyMetadataEntity
     *
     * Delete KeyMetadataEntity
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemKeysIdDeleteTest() throws ApiException {
        String id = null;
        InlineResponse2002 response = api.systemKeysIdDelete(id);

        // TODO: test validations
    }
    /**
     * Get KeyMetadataEntity by ID
     *
     * Get KeyMetadataEntity by ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemKeysIdGetTest() throws ApiException {
        String id = null;
        InlineResponse2002 response = api.systemKeysIdGet(id);

        // TODO: test validations
    }
    /**
     * Update KeyMetadataEntity
     *
     * Update KeyMetadataEntity
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemKeysIdPatchTest() throws ApiException {
        String id = null;
        KeyMetadataEntity body = null;
        InlineResponse2002 response = api.systemKeysIdPatch(id, body);

        // TODO: test validations
    }
    /**
     * Create KeyMetadataEntity
     *
     * Create KeyMetadataEntity
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemKeysPostTest() throws ApiException {
        KeyMetadataEntity body = null;
        InlineResponse2002 response = api.systemKeysPost(body);

        // TODO: test validations
    }
}
