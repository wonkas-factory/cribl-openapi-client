/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.service;

import com.cribl.openapi.client.ApiException;
import com.cribl.openapi.dto.Error;
import com.cribl.openapi.dto.InlineResponse20015;
import com.cribl.openapi.dto.InlineResponse20028;
import com.cribl.openapi.dto.InlineResponse20029;
import com.cribl.openapi.dto.InlineResponse20045;
import com.cribl.openapi.dto.InlineResponse20046;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SystemApi
 */
@Ignore
public class SystemApiTest {

    private final SystemApi api = new SystemApi();

    /**
     * Update changelog viewed state
     *
     * Update changelog viewed state
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changelogViewedPatchTest() throws ApiException {
        InlineResponse20029 response = api.changelogViewedPatch();

        // TODO: test validations
    }
    /**
     * Cancel a running group upgrade
     *
     * Cancel a running group upgrade
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemDistributedUpgradeCancelGroupPostTest() throws ApiException {
        String group = null;
        InlineResponse20015 response = api.systemDistributedUpgradeCancelGroupPost(group);

        // TODO: test validations
    }
    /**
     * Get the previously downloaded logstream package
     *
     * Get the previously downloaded logstream package
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemDistributedUpgradeDownloadFileGetTest() throws ApiException {
        String file = null;
        InlineResponse20015 response = api.systemDistributedUpgradeDownloadFileGet(file);

        // TODO: test validations
    }
    /**
     * Execute distributed group upgrade
     *
     * Execute distributed group upgrade
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemDistributedUpgradeGroupPostTest() throws ApiException {
        String group = null;
        String url = null;
        String hashUrl = null;
        String upgradePercentage = null;
        InlineResponse20015 response = api.systemDistributedUpgradeGroupPost(group, url, hashUrl, upgradePercentage);

        // TODO: test validations
    }
    /**
     * Stage distributed group upgrade
     *
     * Stage distributed group upgrade
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemDistributedUpgradeStageGroupPostTest() throws ApiException {
        String group = null;
        String upgradePercentage = null;
        InlineResponse20015 response = api.systemDistributedUpgradeStageGroupPost(group, upgradePercentage);

        // TODO: test validations
    }
    /**
     * Get Cribl system settings
     *
     * Get Cribl system settings
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemSettingsGetTest() throws ApiException {
        InlineResponse20045 response = api.systemSettingsGet();

        // TODO: test validations
    }
    /**
     * Update Cribl system settings
     *
     * Update Cribl system settings
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemSettingsPatchTest() throws ApiException {
        InlineResponse20045 response = api.systemSettingsPatch();

        // TODO: test validations
    }
    /**
     * Reload Cribl settings from the filesystem
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemSettingsReloadPostTest() throws ApiException {
        api.systemSettingsReloadPost();

        // TODO: test validations
    }
    /**
     * Restart Cribl LogStream server
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemSettingsRestartPostTest() throws ApiException {
        api.systemSettingsRestartPost();

        // TODO: test validations
    }
    /**
     * Upgrade master node with the provided package
     *
     * Upgrade master node with the provided package
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemSettingsUpgradeFromPackagePostTest() throws ApiException {
        String packageUrl = null;
        String hashUrl = null;
        InlineResponse20028 response = api.systemSettingsUpgradeFromPackagePost(packageUrl, hashUrl);

        // TODO: test validations
    }
    /**
     * Get a list of Cribl versions available for upgrade
     *
     * Get a list of Cribl versions available for upgrade
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemSettingsUpgradeGetTest() throws ApiException {
        InlineResponse20046 response = api.systemSettingsUpgradeGet();

        // TODO: test validations
    }
    /**
     * Upgrage Cribl to a given version
     *
     * Upgrage Cribl to a given version
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void systemSettingsUpgradeVersionPostTest() throws ApiException {
        String version = null;
        InlineResponse20028 response = api.systemSettingsUpgradeVersionPost(version);

        // TODO: test validations
    }
}
