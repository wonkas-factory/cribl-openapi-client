/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * ProcessEntry
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-08T00:23:34.796-04:00[America/New_York]")
public class ProcessEntry {
  @SerializedName("env")
  private Map<String, Object> env = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("pid")
  private BigDecimal pid = null;

  @SerializedName("restartOnExit")
  private Boolean restartOnExit = null;

  @SerializedName("restarts")
  private BigDecimal restarts = null;

  @SerializedName("startTime")
  private BigDecimal startTime = null;

  @SerializedName("type")
  private String type = null;

  public ProcessEntry env(Map<String, Object> env) {
    this.env = env;
    return this;
  }

  public ProcessEntry putEnvItem(String key, Object envItem) {
    if (this.env == null) {
      this.env = new HashMap<>();
    }
    this.env.put(key, envItem);
    return this;
  }

   /**
   * Get env
   * @return env
  **/
  @Schema(description = "")
  public Map<String, Object> getEnv() {
    return env;
  }

  public void setEnv(Map<String, Object> env) {
    this.env = env;
  }

  public ProcessEntry id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ProcessEntry pid(BigDecimal pid) {
    this.pid = pid;
    return this;
  }

   /**
   * Get pid
   * @return pid
  **/
  @Schema(description = "")
  public BigDecimal getPid() {
    return pid;
  }

  public void setPid(BigDecimal pid) {
    this.pid = pid;
  }

  public ProcessEntry restartOnExit(Boolean restartOnExit) {
    this.restartOnExit = restartOnExit;
    return this;
  }

   /**
   * Get restartOnExit
   * @return restartOnExit
  **/
  @Schema(description = "")
  public Boolean isRestartOnExit() {
    return restartOnExit;
  }

  public void setRestartOnExit(Boolean restartOnExit) {
    this.restartOnExit = restartOnExit;
  }

  public ProcessEntry restarts(BigDecimal restarts) {
    this.restarts = restarts;
    return this;
  }

   /**
   * Get restarts
   * @return restarts
  **/
  @Schema(description = "")
  public BigDecimal getRestarts() {
    return restarts;
  }

  public void setRestarts(BigDecimal restarts) {
    this.restarts = restarts;
  }

  public ProcessEntry startTime(BigDecimal startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public BigDecimal getStartTime() {
    return startTime;
  }

  public void setStartTime(BigDecimal startTime) {
    this.startTime = startTime;
  }

  public ProcessEntry type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessEntry processEntry = (ProcessEntry) o;
    return Objects.equals(this.env, processEntry.env) &&
        Objects.equals(this.id, processEntry.id) &&
        Objects.equals(this.pid, processEntry.pid) &&
        Objects.equals(this.restartOnExit, processEntry.restartOnExit) &&
        Objects.equals(this.restarts, processEntry.restarts) &&
        Objects.equals(this.startTime, processEntry.startTime) &&
        Objects.equals(this.type, processEntry.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(env, id, pid, restartOnExit, restarts, startTime, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessEntry {\n");
    
    sb.append("    env: ").append(toIndentedString(env)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    restartOnExit: ").append(toIndentedString(restartOnExit)).append("\n");
    sb.append("    restarts: ").append(toIndentedString(restarts)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
