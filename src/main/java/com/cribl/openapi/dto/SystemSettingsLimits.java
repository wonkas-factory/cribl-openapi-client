/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import com.cribl.openapi.dto.SystemInfoLimitsSamples;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * SystemSettingsLimits
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-08T00:23:34.796-04:00[America/New_York]")
public class SystemSettingsLimits {
  @SerializedName("cpuProfileTTL")
  private String cpuProfileTTL = null;

  @SerializedName("metricsFieldsBlacklist")
  private List<String> metricsFieldsBlacklist = null;

  @SerializedName("metricsGCPeriod")
  private String metricsGCPeriod = null;

  @SerializedName("metricsNeverDropList")
  private List<String> metricsNeverDropList = null;

  @SerializedName("metricsWorkerIdBlacklist")
  private List<String> metricsWorkerIdBlacklist = null;

  @SerializedName("minFreeSpace")
  private String minFreeSpace = null;

  @SerializedName("samples")
  private SystemInfoLimitsSamples samples = null;

  public SystemSettingsLimits cpuProfileTTL(String cpuProfileTTL) {
    this.cpuProfileTTL = cpuProfileTTL;
    return this;
  }

   /**
   * Get cpuProfileTTL
   * @return cpuProfileTTL
  **/
  @Schema(description = "")
  public String getCpuProfileTTL() {
    return cpuProfileTTL;
  }

  public void setCpuProfileTTL(String cpuProfileTTL) {
    this.cpuProfileTTL = cpuProfileTTL;
  }

  public SystemSettingsLimits metricsFieldsBlacklist(List<String> metricsFieldsBlacklist) {
    this.metricsFieldsBlacklist = metricsFieldsBlacklist;
    return this;
  }

  public SystemSettingsLimits addMetricsFieldsBlacklistItem(String metricsFieldsBlacklistItem) {
    if (this.metricsFieldsBlacklist == null) {
      this.metricsFieldsBlacklist = new ArrayList<>();
    }
    this.metricsFieldsBlacklist.add(metricsFieldsBlacklistItem);
    return this;
  }

   /**
   * Get metricsFieldsBlacklist
   * @return metricsFieldsBlacklist
  **/
  @Schema(description = "")
  public List<String> getMetricsFieldsBlacklist() {
    return metricsFieldsBlacklist;
  }

  public void setMetricsFieldsBlacklist(List<String> metricsFieldsBlacklist) {
    this.metricsFieldsBlacklist = metricsFieldsBlacklist;
  }

  public SystemSettingsLimits metricsGCPeriod(String metricsGCPeriod) {
    this.metricsGCPeriod = metricsGCPeriod;
    return this;
  }

   /**
   * Get metricsGCPeriod
   * @return metricsGCPeriod
  **/
  @Schema(description = "")
  public String getMetricsGCPeriod() {
    return metricsGCPeriod;
  }

  public void setMetricsGCPeriod(String metricsGCPeriod) {
    this.metricsGCPeriod = metricsGCPeriod;
  }

  public SystemSettingsLimits metricsNeverDropList(List<String> metricsNeverDropList) {
    this.metricsNeverDropList = metricsNeverDropList;
    return this;
  }

  public SystemSettingsLimits addMetricsNeverDropListItem(String metricsNeverDropListItem) {
    if (this.metricsNeverDropList == null) {
      this.metricsNeverDropList = new ArrayList<>();
    }
    this.metricsNeverDropList.add(metricsNeverDropListItem);
    return this;
  }

   /**
   * Get metricsNeverDropList
   * @return metricsNeverDropList
  **/
  @Schema(description = "")
  public List<String> getMetricsNeverDropList() {
    return metricsNeverDropList;
  }

  public void setMetricsNeverDropList(List<String> metricsNeverDropList) {
    this.metricsNeverDropList = metricsNeverDropList;
  }

  public SystemSettingsLimits metricsWorkerIdBlacklist(List<String> metricsWorkerIdBlacklist) {
    this.metricsWorkerIdBlacklist = metricsWorkerIdBlacklist;
    return this;
  }

  public SystemSettingsLimits addMetricsWorkerIdBlacklistItem(String metricsWorkerIdBlacklistItem) {
    if (this.metricsWorkerIdBlacklist == null) {
      this.metricsWorkerIdBlacklist = new ArrayList<>();
    }
    this.metricsWorkerIdBlacklist.add(metricsWorkerIdBlacklistItem);
    return this;
  }

   /**
   * Get metricsWorkerIdBlacklist
   * @return metricsWorkerIdBlacklist
  **/
  @Schema(description = "")
  public List<String> getMetricsWorkerIdBlacklist() {
    return metricsWorkerIdBlacklist;
  }

  public void setMetricsWorkerIdBlacklist(List<String> metricsWorkerIdBlacklist) {
    this.metricsWorkerIdBlacklist = metricsWorkerIdBlacklist;
  }

  public SystemSettingsLimits minFreeSpace(String minFreeSpace) {
    this.minFreeSpace = minFreeSpace;
    return this;
  }

   /**
   * Get minFreeSpace
   * @return minFreeSpace
  **/
  @Schema(description = "")
  public String getMinFreeSpace() {
    return minFreeSpace;
  }

  public void setMinFreeSpace(String minFreeSpace) {
    this.minFreeSpace = minFreeSpace;
  }

  public SystemSettingsLimits samples(SystemInfoLimitsSamples samples) {
    this.samples = samples;
    return this;
  }

   /**
   * Get samples
   * @return samples
  **/
  @Schema(description = "")
  public SystemInfoLimitsSamples getSamples() {
    return samples;
  }

  public void setSamples(SystemInfoLimitsSamples samples) {
    this.samples = samples;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemSettingsLimits systemSettingsLimits = (SystemSettingsLimits) o;
    return Objects.equals(this.cpuProfileTTL, systemSettingsLimits.cpuProfileTTL) &&
        Objects.equals(this.metricsFieldsBlacklist, systemSettingsLimits.metricsFieldsBlacklist) &&
        Objects.equals(this.metricsGCPeriod, systemSettingsLimits.metricsGCPeriod) &&
        Objects.equals(this.metricsNeverDropList, systemSettingsLimits.metricsNeverDropList) &&
        Objects.equals(this.metricsWorkerIdBlacklist, systemSettingsLimits.metricsWorkerIdBlacklist) &&
        Objects.equals(this.minFreeSpace, systemSettingsLimits.minFreeSpace) &&
        Objects.equals(this.samples, systemSettingsLimits.samples);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpuProfileTTL, metricsFieldsBlacklist, metricsGCPeriod, metricsNeverDropList, metricsWorkerIdBlacklist, minFreeSpace, samples);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemSettingsLimits {\n");
    
    sb.append("    cpuProfileTTL: ").append(toIndentedString(cpuProfileTTL)).append("\n");
    sb.append("    metricsFieldsBlacklist: ").append(toIndentedString(metricsFieldsBlacklist)).append("\n");
    sb.append("    metricsGCPeriod: ").append(toIndentedString(metricsGCPeriod)).append("\n");
    sb.append("    metricsNeverDropList: ").append(toIndentedString(metricsNeverDropList)).append("\n");
    sb.append("    metricsWorkerIdBlacklist: ").append(toIndentedString(metricsWorkerIdBlacklist)).append("\n");
    sb.append("    minFreeSpace: ").append(toIndentedString(minFreeSpace)).append("\n");
    sb.append("    samples: ").append(toIndentedString(samples)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
