/*
 * Cribl LogStream
 * REST API Reference of available endpoints and their supported operations for accessing, updating, creating, or deleting resources. Product documentation available at [docs.cribl.io](http://docs.cribl.io).
 *
 * OpenAPI spec version: 3.1.2-abb571bc
 * Contact: support@cribl.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cribl.openapi.dto;

import java.util.Objects;
import java.util.Arrays;
import com.cribl.openapi.dto.AUTHPROVIDER;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * IKMSProviderConfigAuth
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-10-08T00:23:34.796-04:00[America/New_York]")
public class IKMSProviderConfigAuth {
  @SerializedName("assumeRoleArn")
  private String assumeRoleArn = null;

  @SerializedName("assumeRoleExternalId")
  private String assumeRoleExternalId = null;

  @SerializedName("awsApiKey")
  private String awsApiKey = null;

  @SerializedName("awsAuthenticationMethod")
  private String awsAuthenticationMethod = null;

  @SerializedName("awsSecretKey")
  private String awsSecretKey = null;

  @SerializedName("enableAssumeRole")
  private Boolean enableAssumeRole = null;

  @SerializedName("provider")
  private AUTHPROVIDER provider = null;

  @SerializedName("token")
  private String token = null;

  @SerializedName("vaultAWSIAMServerID")
  private String vaultAWSIAMServerID = null;

  @SerializedName("vaultRole")
  private String vaultRole = null;

  public IKMSProviderConfigAuth assumeRoleArn(String assumeRoleArn) {
    this.assumeRoleArn = assumeRoleArn;
    return this;
  }

   /**
   * Get assumeRoleArn
   * @return assumeRoleArn
  **/
  @Schema(description = "")
  public String getAssumeRoleArn() {
    return assumeRoleArn;
  }

  public void setAssumeRoleArn(String assumeRoleArn) {
    this.assumeRoleArn = assumeRoleArn;
  }

  public IKMSProviderConfigAuth assumeRoleExternalId(String assumeRoleExternalId) {
    this.assumeRoleExternalId = assumeRoleExternalId;
    return this;
  }

   /**
   * Get assumeRoleExternalId
   * @return assumeRoleExternalId
  **/
  @Schema(description = "")
  public String getAssumeRoleExternalId() {
    return assumeRoleExternalId;
  }

  public void setAssumeRoleExternalId(String assumeRoleExternalId) {
    this.assumeRoleExternalId = assumeRoleExternalId;
  }

  public IKMSProviderConfigAuth awsApiKey(String awsApiKey) {
    this.awsApiKey = awsApiKey;
    return this;
  }

   /**
   * Get awsApiKey
   * @return awsApiKey
  **/
  @Schema(description = "")
  public String getAwsApiKey() {
    return awsApiKey;
  }

  public void setAwsApiKey(String awsApiKey) {
    this.awsApiKey = awsApiKey;
  }

  public IKMSProviderConfigAuth awsAuthenticationMethod(String awsAuthenticationMethod) {
    this.awsAuthenticationMethod = awsAuthenticationMethod;
    return this;
  }

   /**
   * Get awsAuthenticationMethod
   * @return awsAuthenticationMethod
  **/
  @Schema(description = "")
  public String getAwsAuthenticationMethod() {
    return awsAuthenticationMethod;
  }

  public void setAwsAuthenticationMethod(String awsAuthenticationMethod) {
    this.awsAuthenticationMethod = awsAuthenticationMethod;
  }

  public IKMSProviderConfigAuth awsSecretKey(String awsSecretKey) {
    this.awsSecretKey = awsSecretKey;
    return this;
  }

   /**
   * Get awsSecretKey
   * @return awsSecretKey
  **/
  @Schema(description = "")
  public String getAwsSecretKey() {
    return awsSecretKey;
  }

  public void setAwsSecretKey(String awsSecretKey) {
    this.awsSecretKey = awsSecretKey;
  }

  public IKMSProviderConfigAuth enableAssumeRole(Boolean enableAssumeRole) {
    this.enableAssumeRole = enableAssumeRole;
    return this;
  }

   /**
   * Get enableAssumeRole
   * @return enableAssumeRole
  **/
  @Schema(description = "")
  public Boolean isEnableAssumeRole() {
    return enableAssumeRole;
  }

  public void setEnableAssumeRole(Boolean enableAssumeRole) {
    this.enableAssumeRole = enableAssumeRole;
  }

  public IKMSProviderConfigAuth provider(AUTHPROVIDER provider) {
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @Schema(description = "")
  public AUTHPROVIDER getProvider() {
    return provider;
  }

  public void setProvider(AUTHPROVIDER provider) {
    this.provider = provider;
  }

  public IKMSProviderConfigAuth token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @Schema(description = "")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public IKMSProviderConfigAuth vaultAWSIAMServerID(String vaultAWSIAMServerID) {
    this.vaultAWSIAMServerID = vaultAWSIAMServerID;
    return this;
  }

   /**
   * Get vaultAWSIAMServerID
   * @return vaultAWSIAMServerID
  **/
  @Schema(description = "")
  public String getVaultAWSIAMServerID() {
    return vaultAWSIAMServerID;
  }

  public void setVaultAWSIAMServerID(String vaultAWSIAMServerID) {
    this.vaultAWSIAMServerID = vaultAWSIAMServerID;
  }

  public IKMSProviderConfigAuth vaultRole(String vaultRole) {
    this.vaultRole = vaultRole;
    return this;
  }

   /**
   * Get vaultRole
   * @return vaultRole
  **/
  @Schema(description = "")
  public String getVaultRole() {
    return vaultRole;
  }

  public void setVaultRole(String vaultRole) {
    this.vaultRole = vaultRole;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IKMSProviderConfigAuth ikMSProviderConfigAuth = (IKMSProviderConfigAuth) o;
    return Objects.equals(this.assumeRoleArn, ikMSProviderConfigAuth.assumeRoleArn) &&
        Objects.equals(this.assumeRoleExternalId, ikMSProviderConfigAuth.assumeRoleExternalId) &&
        Objects.equals(this.awsApiKey, ikMSProviderConfigAuth.awsApiKey) &&
        Objects.equals(this.awsAuthenticationMethod, ikMSProviderConfigAuth.awsAuthenticationMethod) &&
        Objects.equals(this.awsSecretKey, ikMSProviderConfigAuth.awsSecretKey) &&
        Objects.equals(this.enableAssumeRole, ikMSProviderConfigAuth.enableAssumeRole) &&
        Objects.equals(this.provider, ikMSProviderConfigAuth.provider) &&
        Objects.equals(this.token, ikMSProviderConfigAuth.token) &&
        Objects.equals(this.vaultAWSIAMServerID, ikMSProviderConfigAuth.vaultAWSIAMServerID) &&
        Objects.equals(this.vaultRole, ikMSProviderConfigAuth.vaultRole);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assumeRoleArn, assumeRoleExternalId, awsApiKey, awsAuthenticationMethod, awsSecretKey, enableAssumeRole, provider, token, vaultAWSIAMServerID, vaultRole);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IKMSProviderConfigAuth {\n");
    
    sb.append("    assumeRoleArn: ").append(toIndentedString(assumeRoleArn)).append("\n");
    sb.append("    assumeRoleExternalId: ").append(toIndentedString(assumeRoleExternalId)).append("\n");
    sb.append("    awsApiKey: ").append(toIndentedString(awsApiKey)).append("\n");
    sb.append("    awsAuthenticationMethod: ").append(toIndentedString(awsAuthenticationMethod)).append("\n");
    sb.append("    awsSecretKey: ").append(toIndentedString(awsSecretKey)).append("\n");
    sb.append("    enableAssumeRole: ").append(toIndentedString(enableAssumeRole)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    vaultAWSIAMServerID: ").append(toIndentedString(vaultAWSIAMServerID)).append("\n");
    sb.append("    vaultRole: ").append(toIndentedString(vaultRole)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
